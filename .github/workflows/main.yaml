name: CI/CD Pipeline

on:
  push:
    branches:
      - model-deployment-ds

jobs:
  build-and-deploy:
    name: Build and Deploy to GKE
    runs-on: ubuntu-latest

    env:
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      CLUSTER_NAME: mlops-cluster
      GKE_ZONE: us-east1-b
      IMAGE_TAG: ${{ github.sha }}
      DOCKER_COMPOSE_FILE: docker-compose.yaml
      REPO_NAME: clima-smart-repo
      REGION: us-east1
      NODE_COUNT: 3
      MACHINE_TYPE: e2-medium
      GAR_REPOSITORY: clima-smart-repo

    steps:
    - name: Credentials verification
      shell: bash
      env:
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      run: |
        echo "Service Account Key: $GCP_SA_KEY"
        echo "Project ID: $GCP_PROJECT_ID"

    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker Authentication for Artifact Registry
      run: |
        gcloud auth configure-docker $REGION-docker.pkg.dev

    - name: Create GKE Cluster (if not exists)
      run: |
        CLUSTER_EXISTS=$(gcloud container clusters list --filter="name=$CLUSTER_NAME AND zone:$GKE_ZONE" --format="value(name)")
        if [[ -z "$CLUSTER_EXISTS" ]]; then
          echo "Creating GKE cluster: $CLUSTER_NAME in zone $GKE_ZONE"
          gcloud container clusters create $CLUSTER_NAME \
            --zone $GKE_ZONE \
            --num-nodes $NODE_COUNT \
            --machine-type $MACHINE_TYPE \
            --enable-ip-alias \
            --project $PROJECT_ID
        else
          echo "Cluster $CLUSTER_NAME already exists."
        fi

    - name: Build and Push Images
      run: |
        # Build all services
        docker compose build

        # List services for debugging
        echo "Services in docker-compose.yaml:"
        docker compose config --services

        # List images for debugging
        echo "Built images:"
        docker images

        # Dynamically tag and push each service
        services=$(docker compose config --services)
        for service in $services; do
          # Tag the image dynamically
          image="$REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME/$service:$IMAGE_TAG"
          echo "Tagging $service as $image"
          docker tag $service:latest $image
          
          # Push the image to the registry
          echo "Pushing $image"
          docker push $image
        done


    - name: Install GKE Auth Plugin
      run: |
        sudo apt-get update
        sudo apt-get install apt-transport-https ca-certificates gnupg
        sudo apt-get install -y google-cloud-sdk-gke-gcloud-auth-plugin

    - name: Configure kubectl
      run: |
        gcloud container clusters get-credentials $CLUSTER_NAME --zone $GKE_ZONE --project $PROJECT_ID

    - name: Deploy to GKE
      run: |
        sed -i "s|<image-path>|$REGION-docker.pkg.dev/$PROJECT_ID/$REPO_NAME|g" k8s-deployment.yaml
        kubectl apply -f k8s-deployment.yaml
        kubectl apply -f k8s-services.yaml
